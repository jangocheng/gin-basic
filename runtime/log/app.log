[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/post      --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] GET    /api/v1/system/get        --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/post      --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] GET    /api/v1/system/get        --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/post      --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] GET    /api/v1/system/get        --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /api/v1/account/get       --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] POST   /api/v1/account/post      --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] GET    /api/v1/system/get        --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/post      --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] GET    /api/v1/system/get        --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/post      --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] GET    /api/v1/system/get        --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/post      --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] GET    /api/v1/system/get        --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/post      --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] GET    /api/v1/system/get        --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/post      --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] GET    /api/v1/system/get        --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (4 handlers)

[GIN-debug] GET    /api/v1/account/get       --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] GET    /api/v1/system/get        --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (4 handlers)

[GIN-debug] GET    /api/v1/account/get       --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] GET    /api/v1/system/get        --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 12:36:44 | 404 |         828ns |       127.0.0.1 | GET      "/api/v1/account/addAccount?username=test&password=123456"

[GIN] 2020/03/25 - 12:37:00 | 404 |         668ns |       127.0.0.1 | GET      "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:37:10 | 401 |     105.353µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (4 handlers)

[GIN-debug] GET    /api/v1/account/get       --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] GET    /api/v1/system/get        --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 12:38:08 | 401 |      99.597µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:38:08 | 401 |      45.354µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:38:09 | 401 |      50.138µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:38:10 | 401 |      33.822µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:38:11 | 401 |      77.583µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:38:28 | 401 |      33.138µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (4 handlers)

[GIN-debug] GET    /api/v1/account/get       --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] GET    /api/v1/system/get        --> jcfw.com/legal-api/middleware.JWT.func1 (3 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 12:39:08 | 401 |     103.583µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN] 2020/03/25 - 12:41:11 | 200 |     262.306µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN] 2020/03/25 - 12:44:45 | 200 |     265.545µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:44:46 | 200 |     103.526µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:44:46 | 200 |     115.124µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:44:46 | 200 |     136.376µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:44:46 | 200 |     144.425µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:44:46 | 200 |     151.257µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:44:47 | 200 |     168.605µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:44:47 | 200 |     209.509µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:44:47 | 200 |     193.465µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 12:45:39 | 200 |     375.541µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 12:47:25 | 200 |    3.864247ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:47:25 | 200 |     840.119µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:47:26 | 200 |     920.291µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:47:26 | 200 |     900.385µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:47:26 | 200 |     872.529µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:47:26 | 200 |     922.335µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:47:26 | 200 |     876.609µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:47:26 | 200 |    1.603294ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:47:27 | 200 |     978.356µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:47:27 | 200 |    1.000443ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:49:04 | 200 |    1.766893ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 12:53:09 | 200 |    1.686671ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 12:53:33 | 200 |     1.97283ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:53:34 | 200 |     811.018µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:53:34 | 200 |     874.337µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:53:34 | 200 |     841.466µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 12:54:40 | 200 |     1.99046ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:54:41 | 200 |     916.743µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:54:42 | 200 |     927.543µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:54:42 | 200 |     921.975µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:54:42 | 200 |     900.037µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:54:43 | 200 |     876.434µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 12:54:43 | 200 |     982.043µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 12:58:10 | 200 |   11.553559ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 12:58:48 | 200 |    2.640439ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN] 2020/03/25 - 13:02:02 | 200 |    3.312628ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 13:03:15 | 200 |    2.189321ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 13:03:45 | 200 |    2.498694ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 13:04:48 | 200 |     2.37121ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 13:04:49 | 200 |    2.774369ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 13:07:11 | 200 |    1.703467ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 13:07:12 | 200 |    1.581074ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 13:07:12 | 200 |    1.570608ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 13:07:12 | 200 |    1.389416ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-gonic/gin.RecoveryWithWriter.func1 (2 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 13:08:30 | 200 |    2.530983ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] POST   /api/v1/api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/api/v1/account/get --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/api/v1/system/get --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/api/v1/account/get --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/api/v1/system/get --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 13:09:16 | 404 |       1.189µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 13:09:31 | 200 |    2.132606ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 13:16:28 | 200 |    2.168799ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 13:16:58 | 200 |    1.966079ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 13:26:09 | 200 |    1.791466ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 13:26:20 | 200 |     661.757µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 13:26:21 | 200 |     721.614µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 13:26:21 | 200 |    1.377839ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN] 2020/03/25 - 13:27:29 | 200 |    1.345967ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 13:27:46 | 200 |     2.35901ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 13:27:48 | 200 |     934.129µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 13:28:06 | 200 |    1.600868ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 15:04:15 | 200 |     737.144µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 15:05:01 | 200 |     215.928µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 15:08:51 | 200 |     684.126µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 15:09:46 | 200 |      246.11µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 15:09:54 | 200 |     336.486µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 15:10:38 | 200 |    1.172802ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 15:11:00 | 200 |     214.115µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 15:11:52 | 200 |     233.851µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 15:12:08 | 200 |     159.748µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 15:13:10 | 200 |     682.196µs |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 15:13:35 | 200 |    1.375457ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 15:24:37 | 500 |    2.698636ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 15:25:50 | 200 |    1.548606ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 15:30:03 | 200 |     2.68056ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 15:30:44 | 200 |    1.601307ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 15:30:57 | 200 |    1.105364ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 15:31:33 | 200 |    2.378441ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 15:34:11 | 200 |    3.065762ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 15:37:26 | 200 |    1.605347ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN] 2020/03/25 - 17:10:46 | 200 |    6.097615ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN] 2020/03/25 - 17:11:21 | 200 |    5.051913ms |       127.0.0.1 | POST     "/api/v1/account/addAccount"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 17:30:18 | 404 |         767ns |       127.0.0.1 | POST     "/api/v1/public/login?username=test&password=123456"

[GIN] 2020/03/25 - 17:30:24 | 200 |    1.181787ms |       127.0.0.1 | GET      "/api/v1/public/login?username=test&password=123456"

[GIN] 2020/03/25 - 17:30:28 | 200 |     717.609µs |       127.0.0.1 | GET      "/api/v1/public/login?username=test&password=123456"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 17:32:00 | 200 |    1.239178ms |       127.0.0.1 | GET      "/api/v1/public/login?username=test&password=123456"

[GIN] 2020/03/25 - 17:32:01 | 200 |     792.752µs |       127.0.0.1 | GET      "/api/v1/public/login?username=test&password=123456"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 17:32:21 | 200 |    1.222295ms |       127.0.0.1 | GET      "/api/v1/public/login?username=test&password=123456"

[GIN] 2020/03/25 - 17:32:49 | 200 |     796.455µs |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 17:33:33 | 200 |    1.753728ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN] 2020/03/25 - 20:38:38 | 200 |    1.965339ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/25 - 20:38:39 | 200 |    1.024187ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/25 - 20:40:48 | 200 |    2.530179ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 20:42:06 | 200 |    1.935235ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 20:44:05 | 200 |    3.037084ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 20:45:13 | 200 |    2.266815ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 20:45:34 | 500 |    3.874007ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/25 - 20:45:36 | 500 |    2.981428ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN] 2020/03/25 - 20:46:16 | 200 |    2.276002ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 20:46:45 | 200 |    3.237036ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 20:47:12 | 200 |    2.045067ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 20:47:29 | 200 |    2.645688ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 20:51:54 | 200 |     1.91066ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 20:52:22 | 200 |    1.692068ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN] 2020/03/25 - 20:58:44 | 200 |    1.752745ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 21:26:42 | 200 |    1.785117ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/25 - 21:26:42 | 200 |    1.337928ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/25 - 21:26:43 | 200 |    1.880725ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/25 - 21:26:43 | 200 |    1.414173ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/25 - 21:26:43 | 200 |    1.274794ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 22:15:13 | 200 |     139.038µs |       127.0.0.1 | GET      "/ping?username=test&password=123456"

[GIN] 2020/03/25 - 22:15:13 | 200 |       78.86µs |       127.0.0.1 | GET      "/ping?username=test&password=123456"

[GIN] 2020/03/25 - 22:15:13 | 200 |      35.105µs |       127.0.0.1 | GET      "/ping?username=test&password=123456"

[GIN] 2020/03/25 - 22:15:13 | 200 |      29.553µs |       127.0.0.1 | GET      "/ping?username=test&password=123456"

[GIN] 2020/03/25 - 22:15:14 | 200 |      29.447µs |       127.0.0.1 | GET      "/ping?username=test&password=123456"

[GIN] 2020/03/25 - 22:15:14 | 200 |      42.268µs |       127.0.0.1 | GET      "/ping?username=test&password=123456"

[GIN] 2020/03/25 - 22:15:14 | 200 |      33.521µs |       127.0.0.1 | GET      "/ping?username=test&password=123456"

[GIN] 2020/03/25 - 22:15:14 | 200 |      28.201µs |       127.0.0.1 | GET      "/ping?username=test&password=123456"

[GIN] 2020/03/25 - 22:15:15 | 200 |       28.21µs |       127.0.0.1 | GET      "/ping?username=test&password=123456"

[GIN] 2020/03/25 - 22:15:15 | 200 |      32.192µs |       127.0.0.1 | GET      "/ping?username=test&password=123456"

[GIN] 2020/03/25 - 22:15:16 | 200 |      30.116µs |       127.0.0.1 | GET      "/ping?username=test&password=123456"

[GIN] 2020/03/25 - 22:15:29 | 404 |         847ns |       127.0.0.1 | GET      "/api/v1/account/addAccount?username=18689766789&password=123456"

[GIN] 2020/03/25 - 22:15:39 | 200 |    6.006821ms |       127.0.0.1 | POST     "/api/v1/account/addAccount?username=18689766789&password=123456"

[GIN] 2020/03/25 - 22:16:41 | 200 |    1.990958ms |       127.0.0.1 | POST     "/api/v1/account/addAccount?username=18689766789&password=123456"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 22:19:31 | 200 |    3.444481ms |       127.0.0.1 | POST     "/api/v1/account/addAccount?username=18689766789&password=123456"

[GIN] 2020/03/25 - 22:19:36 | 200 |    1.884743ms |       127.0.0.1 | POST     "/api/v1/account/addAccount?username=18689766789&password=123456"

[GIN] 2020/03/25 - 22:21:06 | 404 |         986ns |       127.0.0.1 | POST     "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/25 - 22:21:24 | 200 |    2.973588ms |       127.0.0.1 | POST     "/api/v1/account/addAccount?username=18689766789&password=123456"

[GIN] 2020/03/25 - 22:21:36 | 200 |    1.598415ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/25 - 22:22:13 | 200 |    3.157446ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 22:23:52 | 200 |    2.092774ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/25 - 22:24:10 | 200 |    1.527241ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 22:26:31 | 200 |     2.05752ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 22:34:54 | 200 |     1.86986ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/25 - 22:34:55 | 200 |    1.443284ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/25 - 22:34:55 | 200 |    2.128334ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/25 - 22:34:56 | 200 |    1.333873ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/25 - 22:34:57 | 200 |    1.274928ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/25 - 22:35:04 | 200 |     739.332µs |       127.0.0.1 | GET      "/api/v1/public/login?username=186897667891&password=123456"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 22:36:40 | 200 |     880.799µs |       127.0.0.1 | GET      "/api/v1/public/login?username=186897667891&password=123456"

[GIN] 2020/03/25 - 22:36:47 | 200 |     373.916µs |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/25 - 22:36:53 | 200 |     351.802µs |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 22:38:07 | 200 |    2.301783ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/25 - 22:38:15 | 200 |     736.463µs |       127.0.0.1 | GET      "/api/v1/public/login?username=186897667891&password=123456"

[GIN] 2020/03/25 - 22:38:18 | 200 |    1.824398ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/25 - 22:38:22 | 200 |    1.236126ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=1234567"

[GIN] 2020/03/25 - 22:38:26 | 200 |    1.315484ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN] 2020/03/25 - 22:45:22 | 200 |    3.067916ms |       127.0.0.1 | POST     "/api/v1/account/addAccount?username=18689766789&password=123456"

[GIN] 2020/03/25 - 22:45:25 | 200 |     826.155µs |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/25 - 22:45:26 | 200 |     705.258µs |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/25 - 22:45:59 | 200 |    2.308212ms |       127.0.0.1 | POST     "/api/v1/account/addAccount?username=18689766789&password=123456"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 22:48:29 | 200 |    1.257469ms |       127.0.0.1 | POST     "/api/v1/account/addAccount?username=18689766789&password=123456"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 22:49:24 | 200 |   63.248824ms |       127.0.0.1 | POST     "/api/v1/account/addAccount?username=18689766789&password=123456"

[GIN] 2020/03/25 - 22:50:04 | 200 |   59.846998ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/25 - 22:50:07 | 200 |    58.69281ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/25 - 22:50:53 | 200 |   65.957373ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/26 - 00:05:31 | 200 |    1.457294ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/26 - 00:05:32 | 200 |    1.094391ms |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/26 - 00:05:33 | 200 |     778.682µs |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/26 - 00:05:33 | 200 |     626.304µs |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/26 - 00:05:33 | 200 |     683.347µs |       127.0.0.1 | GET      "/api/v1/public/login?username=18689766789&password=123456"

[GIN] 2020/03/26 - 00:06:56 | 404 |         657ns |       127.0.0.1 | POST     "/api/v1/public/login"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/26 - 00:07:20 | 200 |    1.781032ms |       127.0.0.1 | POST     "/api/v1/public/login"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/26 - 00:07:44 | 200 |    1.534724ms |       127.0.0.1 | POST     "/api/v1/public/login"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] POST   /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/26 - 00:08:25 | 500 |    2.933399ms |       127.0.0.1 | POST     "/api/v1/public/login"

[GIN] 2020/03/26 - 00:08:27 | 500 |    1.925283ms |       127.0.0.1 | POST     "/api/v1/public/login"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/26 - 00:10:34 | 500 |    2.987108ms |       127.0.0.1 | POST     "/api/v1/public/login"

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/26 - 00:11:15 | 200 |   67.897699ms |       127.0.0.1 | POST     "/api/v1/public/login"

[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200

[GIN] 2020/03/26 - 00:11:20 | 200 |   66.724111ms |       127.0.0.1 | POST     "/api/v1/public/login"

[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200

[GIN] 2020/03/26 - 00:11:49 | 200 |   65.688759ms |       127.0.0.1 | POST     "/api/v1/public/login"

[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200

[GIN] 2020/03/26 - 00:11:50 | 200 |   63.906049ms |       127.0.0.1 | POST     "/api/v1/public/login"

[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200

[GIN] 2020/03/26 - 00:12:08 | 200 |     798.144µs |       127.0.0.1 | POST     "/api/v1/public/login"

[GIN] 2020/03/26 - 00:12:12 | 200 |   66.507946ms |       127.0.0.1 | POST     "/api/v1/public/login"

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] POST   /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN] 2020/03/26 - 00:12:57 | 200 |   60.445041ms |       127.0.0.1 | POST     "/api/v1/public/login"

[GIN] 2020/03/26 - 00:13:01 | 200 |      87.705µs |       127.0.0.1 | POST     "/api/v1/public/login"

[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] POST   /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)


[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.


[GIN-debug] GET    /health                   --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] GET    /ping                     --> jcfw.com/legal-api/api.Health (3 handlers)

[GIN-debug] POST   /api/v1/public/login      --> jcfw.com/legal-api/api/v1/account.Login (6 handlers)

[GIN-debug] POST   /api/v1/account/addAccount --> jcfw.com/legal-api/api/v1/account.AddAcount (6 handlers)

[GIN-debug] GET    /api/v1/account/get       --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] GET    /api/v1/system/get        --> github.com/gin-contrib/cors.New.func1 (5 handlers)

[GIN-debug] Listening and serving HTTP on 127.0.0.1:8080

